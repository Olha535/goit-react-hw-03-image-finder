{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","services/constants.js","services/api-service.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","components/App.js","index.js"],"names":["module","exports","API_KEY","BASE_URL","searchQuery","page","a","url","axios","get","data","hits","fetchImages","Searchbar","state","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","className","s","searchbar","this","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","name","onChange","Component","ImageGalleryItem","image","tags","onImageClick","src","alt","onClick","ImageGallery","images","imageGallery","map","id","webformatURL","largeImageURL","Button","button","modalRoot","document","querySelector","Modal","onCloseModal","code","onClose","onCloseBackdrop","target","window","addEventListener","removeEventListener","createPortal","overlay","modal","showModal","Spinner","color","height","width","timeout","style","textAlign","App","loading","error","handleFormSubmit","resetState","loadMoBtn","prevState","handleImageClick","largeImageUrl","toggleModal","prevProps","prevSearch","nextSearch","prevPage","nextPage","length","toast","info","position","POSITION","TOP_RIGHT","theme","message","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e71762fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3zdQp\",\"searchForm\":\"Searchbar_searchForm__jSrkr\",\"searchFormButton\":\"Searchbar_searchFormButton__3p-Xd\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__1aeDb\",\"searchFormInput\":\"Searchbar_searchFormInput__2lThX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__NKIsk\",\"modal\":\"Modal_modal__4GKRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__E9jrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__TsVci\"};","const API_KEY = '22909225-4bd408e854a1416d853656515';\nconst BASE_URL = 'https://pixabay.com/api';\n\nexport { API_KEY, BASE_URL };\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from '../services/constants';\n\nasync function fetchImages(searchQuery, page) {\n  const url = `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  const { data } = await axios.get(url);\n\n  return data.hits;\n}\n\n// function fetchImages(searchQuery, page) {\n//   const url = `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n//   return fetch(url)\n//     .then(response => response.json())\n//     .then(({ hits }) => {\n//       console.log('hits', hits);\n//       return hits;\n//     });\n// }\n\nexport default fetchImages;\n","import React, { Component } from 'react';\nimport s from './Searchbar.module.css';\n// import { toast } from 'react-toastify';\n\nexport default class Searchbar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleNameChange = e => {\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.searchQuery.trim() === '') {\n      return;\n    }\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n  render() {\n    return (\n      <header className={s.searchbar}>\n        <form onSubmit={this.handleSubmit} className={s.searchForm}>\n          <button type=\"submit\" className={s.searchFormButton}>\n            <span className={s.searchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.searchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"searchQuery\"\n            value={this.state.searchQuery}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ image, tags, onImageClick }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={image}\n        alt={tags}\n        onClick={onImageClick}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  tags: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nexport default function ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className={s.imageGallery}>\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          image={webformatURL}\n          tags={tags}\n          onImageClick={() => onImageClick(largeImageURL, tags)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  onImageClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button className={s.button} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    showModal: PropTypes.string,\n    tags: PropTypes.string,\n    onClose: PropTypes.func,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onCloseModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onCloseModal);\n  }\n\n  onCloseModal = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  onCloseBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.overlay} onClick={this.onCloseBackdrop}>\n        <div className={s.modal}>\n          <img src={this.props.showModal} alt={this.props.tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default function Spinner() {\n  return (\n    <div>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n        style={{ textAlign: 'center' }}\n      />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport fetchImages from '../services/api-service';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Button from './Button';\nimport Modal from './Modal';\nimport Spinner from './Loader';\n\nexport default class App extends Component {\n  static propTypes = {\n    searchQuery: PropTypes.string,\n  };\n\n  state = {\n    searchQuery: '',\n    page: 1,\n    images: [],\n    showModal: null,\n    loading: false,\n    alt: null,\n    error: null,\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const prevSearch = prevState.searchQuery;\n    const nextSearch = this.state.searchQuery;\n\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevSearch !== nextSearch || prevPage !== nextPage) {\n      try {\n        this.setState({ loading: true });\n        const images = await fetchImages(nextSearch, nextPage);\n        if (!images.length) {\n          // toast.dismiss();\n          // toast.configure();\n          toast.info('Check the correctness of the input', {\n            position: toast.POSITION.TOP_RIGHT,\n            theme: 'colored',\n          });\n          //   toast.info('Check the correctness of the input', {\n          //     // theme: 'colored',\n          //     // position: 'top-right',\n          //   });\n        }\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n        }));\n      } catch (error) {\n        this.setState({ error });\n        toast.error(this.state.error.message, { theme: 'colored' });\n      } finally {\n        if (prevState.images.length > 10) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n        this.setState({ loading: false });\n      }\n    }\n  }\n\n  handleFormSubmit = searchQuery => {\n    if (this.state.searchQuery === searchQuery) {\n      return;\n    }\n    this.resetState();\n    this.setState({ searchQuery });\n  };\n\n  loadMoBtn = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  handleImageClick = (largeImageUrl, tags) => {\n    this.setState({\n      showModal: largeImageUrl,\n      alt: tags,\n    });\n  };\n\n  toggleModal = () => {\n    this.setState({\n      showModal: null,\n    });\n  };\n\n  resetState = () => {\n    this.setState({\n      searchQuery: '',\n      page: 1,\n      images: [],\n      showModal: null,\n      loading: false,\n      alt: null,\n      error: null,\n    });\n  };\n\n  render() {\n    const { images, alt, showModal, loading } = this.state;\n    const { handleFormSubmit, handleImageClick, toggleModal, loadMoBtn } = this;\n\n    return (\n      <>\n        <div>\n          <Searchbar onSubmit={handleFormSubmit} />\n\n          <ImageGallery images={images} onImageClick={handleImageClick} />\n          {this.state.showModal && (\n            <Modal showModal={showModal} tags={alt} onClose={toggleModal} />\n          )}\n          {images.length > 0 && <Button onClick={loadMoBtn} />}\n          {loading && <Spinner />}\n        </div>\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}